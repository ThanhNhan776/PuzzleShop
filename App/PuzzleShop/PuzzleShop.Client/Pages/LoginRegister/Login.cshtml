@using System.Diagnostics
@using PuzzleShop.Shared.Models
@page "/login"
@inject HttpClient http
@inject Microsoft.AspNetCore.Blazor.Services.IUriHelper UriHelper
<div id="banner" class="jumbotron row">
    <h1>Sign In / Register</h1>
</div>
<section class="page-section row col-split-2">
    <div class="col-xs-12 col-sm-6 col-md-4 col-md-offset-1">
        @*<form data-ajax-handler="shop:onLogin" data-validation-message="" method="post" action="#">*@
        <form method="post">
            <h2>Sign In</h2>
            <div class="row">
                <div class="col-xs-12 form-group">
                    <input type="email" name="email" id="email" class="form-control" placeholder="Email" value="" bind="@user.Email" />
                    <label for="email">Email</label>
                </div>
                <div class="col-xs-12 form-group">
                    <input type="password" name="password" id="password" class="form-control" placeholder="Password" bind="@user.Password" />
                    <label for="password">Password</label>
                </div>
                <div class="col-xs-12 form-group clearfix">
                    <a class="btn btn-default forget-link pull-left" href="password-restore">forgot your password?</a>
                    <button class="btn btn-primary pull-right" onclick="@LoginAction" type="button">Log In <i class="fa fa-lock"></i></button>
                </div>
            </div>
        </form>
    </div>
    <div class="col-xs-12 col-sm-6 col-md-4 col-md-offset-2">
        <form data-ajax-handler="shop:onSignup" data-validation-message="" method="post" action="#">
            <h2>Register a New Account</h2>
            <div class="row">
                <div class="col-xs-12 form-group">
                    <input name="signup[first_name]" id="signup[first_name]" type="text" class="form-control" placeholder="First Name *" />
                    <label for="signup[first_name]">First Name</label>
                </div>
                <div class="col-xs-12 form-group">
                    <input name="signup[last_name]" id="signup[last_name]" type="text" class="form-control" placeholder="Last Name *" />
                    <label for="signup[last_name]">Last Name</label>
                </div>
                <div class="col-xs-12 form-group">
                    <input id="signup[email]" type="text" name="signup[email]" class="form-control" placeholder="Email *" />
                    <label for="signup[email]">Email</label>
                </div>
                <div class="col-xs-12 form-group">
                    <input name="signup[password]" id="signup[password]" type="password" class="form-control" placeholder="Password *" />
                    <label for="signup[password]">Password</label>
                </div>
                <div class="col-xs-12 form-group">
                    <input name="signup[password_confirmation]" id="signup[password_confirmation]" type="password" class="form-control" placeholder="Confirm Password *" />
                    <label for="signup[password_confirmation]">Confirm Password</label>
                </div>
                <input type="hidden" name="autologin" value="1" />
                <input type="hidden" name="redirect" value="/registered" />
            </div>
            <input type="checkbox" name="accepts_marketing" id="accepts_marketing" checked /> Recieve promotional emails
            <br>
            <br>
            <button class="btn btn-primary">Submit <i class="fa fa-arrow-right"></i></button>
        </form>
    </div>
</section>

@functions {

User user = new User();

protected void LoginAction() {
    Debug.WriteLine("Login onclicked!");
    if (!string.IsNullOrEmpty(user.Email) && !string.IsNullOrEmpty(user.Password)) {
        if (user.Email.Equals("admin@admin.admin") && user.Password.Equals("admin")) {
            Debug.WriteLine("Success");
            UriHelper.NavigateTo("/loginSuccess");
        } else {
            Debug.WriteLine("fail");

            UriHelper.NavigateTo("/loginFail");

        }
    }
}

}